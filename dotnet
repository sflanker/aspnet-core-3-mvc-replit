#!/usr/bin/env bash
# Change to required sdk version
SDK_FILE="dotnet-sdk-3.1.407-linux-x64.tar.gz"
BASE_URL="https://download.visualstudio.microsoft.com/download/pr/ab82011d-2549-4e23-a8a9-a2b522a31f27/6e615d6177e49c3e874d05ee3566e8bf"

# -------- DO NOT EDIT BELOW----------------

SDK_DIR="sdk"

exec 3>&1
if [ -t 1 ] && command -v tput > /dev/null; then
    # see if it supports colors
    ncolors=$(tput colors)
    if [ -n "$ncolors" ] && [ $ncolors -ge 8 ]; then
        bold="$(tput bold       || echo)"
        normal="$(tput sgr0     || echo)"
        black="$(tput setaf 0   || echo)"
        red="$(tput setaf 1     || echo)"
        green="$(tput setaf 2   || echo)"
        yellow="$(tput setaf 3  || echo)"
        blue="$(tput setaf 4    || echo)"
        magenta="$(tput setaf 5 || echo)"
        cyan="$(tput setaf 6    || echo)"
        white="$(tput setaf 7   || echo)"
    fi
fi

say_warning() {
    printf "%b\n" "${yellow:-}dotnet_install: Warning: $1${normal:-}"
}

say_err() {
    printf "%b\n" "${red:-}dotnet_install: Error: $1${normal:-}" >&2
}

say() {
    # using stream 3 (defined in the beginning) to not interfere with stdout of functions
    # which may be used as return value
    printf "%b\n" "${cyan:-}dotnet-install:${normal:-} $1" >&3
}

say_verbose() {
    if [ "$verbose" = true ]; then
        say "$1"
    fi
}

remove_sdk_dir() {
    if [ -d $SDK_DIR ]; then
       say "Deleting old SDK installation"
       rm -rf $SDK_DIR
    fi
}

install_sdk() {
    # check if sdk not installed
    if [[ ! -d $SDK_DIR  || ! -f $SDK_DIR/dotnet ]]; then
        remove_sdk_dir
        say "Downloading $SDK_FILE"
        
        wget -q --show-progress "$BASE_URL/$SDK_FILE" 
        mkdir  $SDK_DIR
        say "Extracting $SDK_FILE" 
        tar xzf $SDK_FILE -C $SDK_DIR
        rm $SDK_FILE
        say "Finished installation of $SDK_FILE"
    fi
}

install_sdk

$HOME/$REPL_SLUG/sdk/dotnet "$@"
